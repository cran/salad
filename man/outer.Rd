% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dual-outer.r
\name{outer}
\alias{outer}
\alias{outer.dual}
\alias{outer,dual,dual-method}
\alias{outer,numericOrArray,dual-method}
\alias{outer,dual,numericOrArray-method}
\alias{\%o\%,dual,dual-method}
\alias{\%o\%,numericOrArray,dual-method}
\alias{\%o\%,dual,numericOrArray-method}
\title{Outer product for dual objects}
\usage{
outer.dual(X, Y, FUN = "*", ...)

\S4method{outer}{dual,dual}(X, Y, FUN = "*", ...)

\S4method{outer}{numericOrArray,dual}(X, Y, FUN = "*", ...)

\S4method{outer}{dual,numericOrArray}(X, Y, FUN = "*", ...)

\S4method{\%o\%}{dual,dual}(X, Y)

\S4method{\%o\%}{numericOrArray,dual}(X, Y)

\S4method{\%o\%}{dual,numericOrArray}(X, Y)
}
\arguments{
\item{X, Y}{arguments of 'FUN'}

\item{FUN}{function to use in the outer product}

\item{...}{extra arguments passed to `FUN`}
}
\value{
A dual matrix.
}
\description{
Method extending to dual object the usual method method
}
\details{
Methods extending `outer` and `%o%` to dual objects
}
\examples{
x <- dual(1:3)
outer(x, x)
d(outer(x,x), "x2")

}
